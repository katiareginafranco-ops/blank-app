import streamlit as st

st.set_page_config(
    page_title="An√°lise das Causas de Nota Zero na Reda√ß√£o do ENEM 2024",
    layout="wide"
)

# Exibe o t√≠tulo da p√°gina
st.title("An√°lise das Causas de Nota Zero na Reda√ß√£o do ENEM 2024")

# Exibe o nome do autor logo abaixo, usando markdown para it√°lico
st.markdown("_Por: K√°tia Regina Franco_")

# Exemplo de colunas
coluna1, coluna2 = st.columns((2, 1))
with coluna1:

    # ---- T√≠tulo e Introdu√ß√£o da P√°gina Inicial ----
    st.title("üìä Desvendando a Reda√ß√£o ENEM 2024: Por que a Nota Zero?")
    st.markdown("""
        Bem-vindo ao prot√≥tipo de an√°lise das reda√ß√µes do ENEM 2024.
        Aqui, voc√™ pode explorar e entender os principais motivos que levam as
        reda√ß√µes a receberem a nota zero, uma situa√ß√£o que pode ser evitada com
        informa√ß√£o e estudo.
    
        Neste aplicativo, vamos desmistificar os crit√©rios de anula√ß√£o para ajudar
        estudantes e educadores a se prepararem melhor. Embora o recorte se d√° nos resultados do estado do Esp√≠rito Santo, estudantes de outros estados tamb√©m podem utilizar as informa√ß√µes e dicas.
    """)
st.markdown("---")
with coluna2: 
    with st.container(border=True):
     # Lista dos cards com t√≠tulo, √≠cone e conte√∫do
        cards = [
        {
            "titulo": "1. Fuga total ao tema",
            "tipo": "error",
            "icone": "üö®",
            "conteudo": """
            A reda√ß√£o deve abordar o tema proposto pelo ENEM. Se o texto foge completamente do
            assunto, o participante recebe nota zero.
            """
        },
        {
            "titulo": "2. C√≥pia dos textos motivadores",
            "tipo": "warning",
            "icone": "üìÑ",
            "conteudo": """
            Copiar trechos dos textos de apoio (os chamados "textos motivadores")
            tamb√©m anula a reda√ß√£o. O texto deve ser autoral, usando os textos motivadores
            apenas como refer√™ncia.
            """
        },
        {
            "titulo": "3. Anulada - Desenhos ou improp√©rios",
            "tipo": "info",
            "icone": "‚úçÔ∏è",
            "conteudo": """
            Qualquer tipo de desenho, anota√ß√£o indevida ou ofensa no espa√ßo da reda√ß√£o, nome, assinatura, pode
            levar √† anula√ß√£o, j√° que pode ser um tipo de c√≥digo para identificar o participante.
            """
        },
        {
            "titulo": "4. Desrespeito aos Direitos Humanos",
            "tipo": "success",
            "icone": "‚öñÔ∏è",
            "conteudo": """
            A proposta de interven√ß√£o, que √© um dos crit√©rios de avalia√ß√£o, n√£o pode
            violentar os direitos humanos.
            """
        },
        {
            "titulo": "5. N√£o atendimento ao tipo textual",
            "tipo": "error",
            "icone": "üìö",
            "conteudo": """
            O texto precisa ser um "dissertativo-argumentativo". Qualquer outra forma,
            como poema, narra√ß√£o, ou receita, resulta em nota zero.
            """
        },
        {
            "titulo": "6. Texto com at√© 7 linhas",
            "tipo": "warning",
            "icone": "üìè",
            "conteudo": """
            A reda√ß√£o deve ter, no m√≠nimo, 8 linhas escritas.
            """
        },
        {
            "titulo": "7. Texto com Parte desconectada",
            "tipo": "info",
            "icone": "üîó",
            "conteudo": """
            A reda√ß√£o cont√©m trechos sem rela√ß√£o com o tema proposto ou com o projeto de texto do candidato, atentando contra a seriedade da prova, tais como hino de time de futebol ou receita culin√°ria.
            """
        },
        {
            "titulo": "8. Folha de reda√ß√£o em branco",
            "tipo": "success",
            "icone": "üìÑ",
            "conteudo": """
            A folha de reda√ß√£o n√£o cont√©m texto algum escrito.
            """
        },
    ]

    # Mostra um dropdown para selecionar um card
        st.subheader("Escolha um dos motivos de Nota Zero:")
        opcao = st.selectbox(
        "",
        [f"{card['titulo']}" for card in cards]
    )

    # Filtra o card selecionado
        card_selecionado = next(card for card in cards if card["titulo"] == opcao)

        # Exibe o card com o tipo de mensagem correto
        tipo = card_selecionado["tipo"]
        texto = card_selecionado["titulo"]
        icone = card_selecionado["icone"]
        conteudo = card_selecionado["conteudo"]

        if tipo == "error":
            st.error(f"{texto}", icon=icone)
        elif tipo == "warning":
            st.warning(f"{texto}", icon=icone)
        elif tipo == "info":
            st.info(f"{texto}", icon=icone)
        elif tipo == "success":
            st.success(f"{texto}", icon=icone)

        st.markdown(conteudo)

# ---- Se√ß√£o "Sobre e Fontes" ----
st.subheader("Sobre este Projeto e Fontes de Dados")
st.markdown("""
    Este √© um projeto acad√™mico da disciplina *Cloud Computing para produtos de dados*, do curso de p√≥s-gradua√ß√£o **Minera√ß√£o de Dados Educacionais**.
    O objetivo √© usar dados abertos para gerar insights e ferramentas √∫teis.
   
    **Fonte de Dados:**
    Os dados utilizados para a futura expans√£o do aplicativo vir√£o dos
    **Microdados do ENEM**, disponibilizados anualmente pelo **INEP**.
""")
st.markdown("---")

import streamlit as st
import pandas as pd

# --- Configura√ß√µes Iniciais e T√≠tulo ---
st.set_page_config(
    page_title="An√°lise Descritiva de Dados do ENEM",
    layout="wide"
)

st.title('üìä An√°lise Descritiva Interativa do ENEM')
st.markdown('---')

# Fun√ß√£o para carregar dados de forma eficiente (cache)
# Isso evita recarregar o arquivo toda vez que o Streamlit interage
@st.cache_data
def load_data(uploaded_file):
    """L√™ o arquivo CSV e retorna um DataFrame do Pandas."""
    # Tenta ler com diferentes separadores e encodings, comum em arquivos brasileiros
    try:
        # Tentativa comum para arquivos brasileiros (separador ';')
        df = pd.read_csv(uploaded_file, sep=';', encoding='latin1', low_memory=False)
    except Exception:
        # Tentativa padr√£o (separador ',' e encoding 'utf-8')
        uploaded_file.seek(0) # Volta ao in√≠cio do arquivo se a primeira leitura falhou
        df = pd.read_csv(uploaded_file, encoding='utf-8', low_memory=False)
    
    return df

# --- Upload do Arquivo ---
uploaded_file = st.file_uploader(
    "üì§ Escolha o arquivo CSV do ENEM (ex: ENEM_ES_2024.csv)",
    type="csv"
)

if uploaded_file is not None:
    # Carregando os dados
    df = load_data(uploaded_file)
    st.success(f'Arquivo carregado com sucesso! Total de linhas: {len(df):,}')

    st.markdown('---')

    # 1. Tabela Descritiva (Pandas describe())
    st.header('1. Tabela Descritiva dos Dados Num√©ricos')
    st.info('Usamos `df.describe().T` para gerar as estat√≠sticas das colunas num√©ricas (M√©dia, Desvio Padr√£o, M√≠nimo, M√°ximo, Quartis).')
    
    try:
        # Transp√µe (.T) o describe para que as estat√≠sticas fiquem nas colunas e as vari√°veis nas linhas
        # Formata os n√∫meros para duas casas decimais
        st.dataframe(
            df.describe().T.style.format("{:.2f}"),
            use_container_width=True
        )
    except Exception as e:
        st.error(f"N√£o foi poss√≠vel gerar as estat√≠sticas descritivas. Verifique a estrutura do seu CSV. Erro: {e}")
        st.dataframe(df.head()) # Mostra o cabe√ßalho para debug

    st.markdown('---')

    # 2. Gr√°fico de Barras (st.bar_chart)
    # Exemplo: Compara√ß√£o da M√©dia da Nota de Reda√ß√£o por G√™nero
    st.header('2. Gr√°fico de Barras com st.bar_chart')
    st.subheader('M√©dia da Nota de Reda√ß√£o por G√™nero (Exemplo)')
    st.write('Para o gr√°fico, calculamos a m√©dia da coluna **NU_NOTA_REDACAO** agrupada pela coluna **TP_SEXO**.')

    # Colunas comuns no ENEM para este exemplo
    GENDER_COL = 'TP_SEXO'
    SCORE_COL = 'NU_NOTA_REDACAO'
    
    # Verifica se as colunas necess√°rias existem na base
    if GENDER_COL in df.columns and SCORE_COL in df.columns:
        
        # Filtra para remover valores nulos ou inv√°lidos na coluna da nota
        df_filtered = df.dropna(subset=[SCORE_COL])
        
        # Agrega√ß√£o: Calcula a m√©dia da nota de reda√ß√£o por g√™nero
        chart_data = df_filtered.groupby(GENDER_COL)[SCORE_COL].mean().reset_index()
        
        # Renomeia as colunas para melhor clareza no gr√°fico
        chart_data.columns = ['G√™nero', 'M√©dia da Reda√ß√£o'] 
        
        # Exibe o gr√°fico de barras
        st.bar_chart(
            chart_data, 
            x='G√™nero', 
            y='M√©dia da Reda√ß√£o', 
            color="#279930" # Cor verde para destaque
        )
        
        st.caption('Tabela de dados usada para o gr√°fico:')
        st.dataframe(chart_data)

    else:
        st.warning(f"As colunas essenciais ('{GENDER_COL}' ou '{SCORE_COL}') n√£o foram encontradas no seu arquivo para gerar o gr√°fico. Por favor, ajuste o c√≥digo para usar colunas existentes.")
        
else:
    st.info("‚ö†Ô∏è Por favor, fa√ßa o upload do seu arquivo CSV para come√ßar a an√°lise.")
