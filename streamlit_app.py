import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(
    page_title="An√°lise das Causas de Nota Zero na Reda√ß√£o do ENEM 2024",
    layout="wide"
)

# Exibe o t√≠tulo da p√°gina
st.title("An√°lise das Causas de Nota Zero na Reda√ß√£o do ENEM 2024")

# Exibe o nome do autor logo abaixo, usando markdown para it√°lico
st.markdown("_Por: K√°tia Regina Franco_")

# Exemplo de colunas
coluna1, coluna2 = st.columns((2, 1))
with coluna1:

    # ---- T√≠tulo e Introdu√ß√£o da P√°gina Inicial ----
    st.title("üìä Desvendando a Reda√ß√£o ENEM 2024: Por que a Nota Zero?")
    st.markdown("""
        Bem-vindo ao prot√≥tipo de an√°lise das reda√ß√µes do ENEM 2024.
        Aqui, voc√™ pode explorar e entender os principais motivos que levam as
        reda√ß√µes a receberem a nota zero, uma situa√ß√£o que pode ser evitada com
        informa√ß√£o e estudo.
    
        Neste aplicativo, vamos desmistificar os crit√©rios de anula√ß√£o para ajudar
        estudantes e educadores a se prepararem melhor. Embora o recorte se d√° nos resultados do estado do Esp√≠rito Santo, estudantes de outros estados tamb√©m podem utilizar as informa√ß√µes e dicas.
    """)
st.markdown("---")
with coluna2: 
    with st.container(border=True):
     # Lista dos cards com t√≠tulo, √≠cone e conte√∫do
        cards = [
        {
            "titulo": "1. Fuga total ao tema",
            "tipo": "error",
            "icone": "üö®",
            "conteudo": """
            A reda√ß√£o deve abordar o tema proposto pelo ENEM. Se o texto foge completamente do
            assunto, o participante recebe nota zero.
            """
        },
        {
            "titulo": "2. C√≥pia dos textos motivadores",
            "tipo": "warning",
            "icone": "üìÑ",
            "conteudo": """
            Copiar trechos dos textos de apoio (os chamados "textos motivadores")
            tamb√©m anula a reda√ß√£o. O texto deve ser autoral, usando os textos motivadores
            apenas como refer√™ncia.
            """
        },
        {
            "titulo": "3. Anulada - Desenhos ou improp√©rios",
            "tipo": "info",
            "icone": "‚úçÔ∏è",
            "conteudo": """
            Qualquer tipo de desenho, anota√ß√£o indevida ou ofensa no espa√ßo da reda√ß√£o, nome, assinatura, pode
            levar √† anula√ß√£o, j√° que pode ser um tipo de c√≥digo para identificar o participante.
            """
        },
        {
            "titulo": "4. Desrespeito aos Direitos Humanos",
            "tipo": "success",
            "icone": "‚öñÔ∏è",
            "conteudo": """
            A proposta de interven√ß√£o, que √© um dos crit√©rios de avalia√ß√£o, n√£o pode
            violentar os direitos humanos.
            """
        },
        {
            "titulo": "5. N√£o atendimento ao tipo textual",
            "tipo": "error",
            "icone": "üìö",
            "conteudo": """
            O texto precisa ser um "dissertativo-argumentativo". Qualquer outra forma,
            como poema, narra√ß√£o, ou receita, resulta em nota zero.
            """
        },
        {
            "titulo": "6. Texto com at√© 7 linhas",
            "tipo": "warning",
            "icone": "üìè",
            "conteudo": """
            A reda√ß√£o deve ter, no m√≠nimo, 8 linhas escritas.
            """
        },
        {
            "titulo": "7. Texto com Parte desconectada",
            "tipo": "info",
            "icone": "üîó",
            "conteudo": """
            A reda√ß√£o cont√©m trechos sem rela√ß√£o com o tema proposto ou com o projeto de texto do candidato, atentando contra a seriedade da prova, tais como hino de time de futebol ou receita culin√°ria.
            """
        },
        {
            "titulo": "8. Folha de reda√ß√£o em branco",
            "tipo": "success",
            "icone": "üìÑ",
            "conteudo": """
            A folha de reda√ß√£o n√£o cont√©m texto algum escrito.
            """
        },
    ]

    # Mostra um dropdown para selecionar um card
        st.subheader("Escolha um dos motivos de Nota Zero:")
        opcao = st.selectbox(
        "",
        [f"{card['titulo']}" for card in cards]
    )

    # Filtra o card selecionado
        card_selecionado = next(card for card in cards if card["titulo"] == opcao)

        # Exibe o card com o tipo de mensagem correto
        tipo = card_selecionado["tipo"]
        texto = card_selecionado["titulo"]
        icone = card_selecionado["icone"]
        conteudo = card_selecionado["conteudo"]

        if tipo == "error":
            st.error(f"{texto}", icon=icone)
        elif tipo == "warning":
            st.warning(f"{texto}", icon=icone)
        elif tipo == "info":
            st.info(f"{texto}", icon=icone)
        elif tipo == "success":
            st.success(f"{texto}", icon=icone)

        st.markdown(conteudo)

# ---- Se√ß√£o "Sobre e Fontes" ----
st.subheader("Sobre este Projeto e Fontes de Dados")
st.markdown("""
    Este √© um projeto acad√™mico da disciplina *Cloud Computing para produtos de dados*, do curso de p√≥s-gradua√ß√£o **Minera√ß√£o de Dados Educacionais**.
    O objetivo √© usar dados abertos para gerar insights e ferramentas √∫teis.
   
    **Fonte de Dados:**
    Os dados utilizados para a futura expans√£o do aplicativo vir√£o dos
    **Microdados do ENEM**, disponibilizados anualmente pelo **INEP**.
""")
st.markdown("---")

st.set_page_config(page_title="An√°lise ENEM ES 2024", layout="wide")

st.title("üìö An√°lise da Reda√ß√£o - ENEM ES 2024")

# üìù Apresenta√ß√£o da se√ß√£o de an√°lise
st.markdown("""
## ‚úçÔ∏è An√°lise dos Status da Reda√ß√£o

Nesta se√ß√£o, voc√™ pode analisar como as reda√ß√µes foram avaliadas pela banca.  
Cada tipo de status ‚Äî como *em branco*, *anulada*, *v√°lida*, entre outros ‚Äî √© representado por um n√∫mero espec√≠fico, descrito na tabela abaixo.  

Essas informa√ß√µes ajudam a entender a distribui√ß√£o dos participantes por status da reda√ß√£o, considerando **munic√≠pio** e **tipo de escola**.

---

### üóÇÔ∏è Tabela de C√≥digos de Status da Reda√ß√£o

| C√≥digo | Descri√ß√£o                           |
|--------|-------------------------------------|
| 1      | Sem problemas                       |
| 2      | Anulada                             |
| 3      | C√≥pia do texto motivador            |
| 4      | Em branco                           |
| 6      | Fuga ao tema                        |
| 7      | N√£o atendimento ao tipo textual     |
| 8      | Texto insuficiente                  |
| 9      | Parte desconectada                  |

---
""")
st.markdown("---")

# Fun√ß√£o para carregar os dados com cache
@st.cache_data
def carregar_dados(uploaded_file):
    df = pd.read_csv(uploaded_file)
    return df

# Upload do arquivo
uploaded_file = st.file_uploader("Carregue o arquivo ENEM_ES_2024_REDA√á√ÉO.csv", type="csv")

if uploaded_file:
    df = carregar_dados(uploaded_file)
    st.success("Arquivo carregado com sucesso!")

    # üîé Visualiza√ß√£o inicial
    if st.checkbox("üëÄ Visualizar primeiras linhas da tabela"):
        st.write(df.head())

    # üéõÔ∏è Sidebar para filtros
    st.sidebar.header("üîç Filtros")

    municipios = sorted(df['NOME MUN. PROVA'].dropna().unique())
    status_redacao = sorted(df['STATUS REDA√á√ÉO'].dropna().unique())
    tipos_escola = sorted(df['DEP. ADMIN.'].dropna().unique())

    municipio_filtro = st.sidebar.multiselect("Filtrar por Munic√≠pio", municipios, default=municipios)
    status_filtro = st.sidebar.multiselect("Filtrar por Status da Reda√ß√£o", status_redacao, default=status_redacao)
    escola_filtro = st.sidebar.multiselect("Filtrar por Tipo de Escola", tipos_escola, default=tipos_escola)

    # üßπ Aplicando os filtros
    df_filtrado = df[
        (df['NOME MUN. PROVA'].isin(municipio_filtro)) &
        (df['STATUS REDA√á√ÉO'].isin(status_filtro)) &
        (df['DEP. ADMIN.'].isin(escola_filtro))
    ]

    # üßæ Tabela completa (movida para antes da an√°lise)
    st.markdown("## üìÑ Exibi√ß√£o da Tabela Completa Filtrada")
    st.dataframe(df_filtrado)

    # üìä Gr√°fico de incid√™ncia
    st.markdown("## üìç Incid√™ncia do Status da Reda√ß√£o por Munic√≠pio")
    incidencia = df_filtrado.groupby(['NOME MUN. PROVA', 'STATUS REDA√á√ÉO']).size().unstack(fill_value=0)

    fig1, ax1 = plt.subplots(figsize=(12, 6))
    incidencia.plot(kind='bar', stacked=True, ax=ax1)
    ax1.set_title("Incid√™ncia do Status da Reda√ß√£o por Munic√≠pio")
    ax1.set_xlabel("Munic√≠pio")
    ax1.set_ylabel("Quantidade")
    ax1.legend(title="Status", bbox_to_anchor=(1.05, 1), loc='upper left')
    plt.xticks(rotation=90)
    st.pyplot(fig1)

else:
    st.info("Por favor, carregue o arquivo CSV para iniciar a an√°lise.")

# üìä Gr√°fico: Incid√™ncia do Status da Reda√ß√£o por Munic√≠pio

st.markdown("## üìç Incid√™ncia do Status da Reda√ß√£o por Munic√≠pio")

# Agrupa e transforma os dados para gr√°fico
incidencia = df_filtrado.groupby(['NOME MUN. PROVA', 'STATUS REDA√á√ÉO']).size().unstack(fill_value=0)

# Cria√ß√£o do gr√°fico com matplotlib
fig, ax = plt.subplots(figsize=(12, 6))
incidencia.plot(kind='bar', stacked=True, ax=ax, colormap='tab20c')

# Personaliza√ß√£o
ax.set_title("Incid√™ncia do Status da Reda√ß√£o por Munic√≠pio")
ax.set_xlabel("Munic√≠pio")
ax.set_ylabel("Status da Reda√ß√£o")
ax.legend(title="Status da Reda√ß√£o", bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=90)
plt.tight_layout()

# Exibe no Streamlit
st.pyplot(fig)